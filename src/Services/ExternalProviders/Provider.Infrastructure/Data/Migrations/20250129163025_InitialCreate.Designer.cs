// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Provider.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ProviderDbContext))]
    [Migration("20250129163025_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Provider.Domain.Models.MasaryServiceslist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("InquiryRequired")
                        .HasColumnType("bit");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MasaryServiceslists");
                });

            modelBuilder.Entity("Provider.Domain.Models.ServiceCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Charge")
                        .HasColumnType("float");

                    b.Property<double>("From")
                        .HasColumnType("float");

                    b.Property<int>("MasaryServiceslistId")
                        .HasColumnType("int");

                    b.Property<bool>("Percentage")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<double>("Slap")
                        .HasColumnType("float");

                    b.Property<double>("To")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MasaryServiceslistId");

                    b.ToTable("ServiceCharges");
                });

            modelBuilder.Entity("Provider.Domain.Models.ServiceParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ClientId")
                        .HasColumnType("bit");

                    b.Property<bool>("ConfirmRequired")
                        .HasColumnType("bit");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasaryServiceslistId")
                        .HasColumnType("int");

                    b.Property<int>("MaxLength")
                        .HasColumnType("int");

                    b.Property<int>("MinLength")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MasaryServiceslistId");

                    b.ToTable("ServiceParameters");
                });

            modelBuilder.Entity("Provider.Domain.Models.ServiceCharge", b =>
                {
                    b.HasOne("Provider.Domain.Models.MasaryServiceslist", "MasaryServiceslist")
                        .WithMany("ServiceCharges")
                        .HasForeignKey("MasaryServiceslistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasaryServiceslist");
                });

            modelBuilder.Entity("Provider.Domain.Models.ServiceParameter", b =>
                {
                    b.HasOne("Provider.Domain.Models.MasaryServiceslist", "MasaryServiceslist")
                        .WithMany("ServiceParameter")
                        .HasForeignKey("MasaryServiceslistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasaryServiceslist");
                });

            modelBuilder.Entity("Provider.Domain.Models.MasaryServiceslist", b =>
                {
                    b.Navigation("ServiceCharges");

                    b.Navigation("ServiceParameter");
                });
#pragma warning restore 612, 618
        }
    }
}
